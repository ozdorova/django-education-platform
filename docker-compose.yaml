version: '3.7'


services:
  db:
    image: postgres:16.2-alpine
    restart: always
    volumes:
      - ./data/db/:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  
  cache:
    image: redis:latest
    restart: always
    volumes:
      - ./data/cache:/data

  web:
    build: .
    command: ["./wait-for-it.sh", "db:5432", "--", "uwsgi", "--ini", "/code/config/uwsgi/uwsgi.ini"]
    restart: always
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=educa.settings.prod
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    env_file:
      - .env
    depends_on:
      - db
      - cache
  
  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./config/nginx:/etc/nginx/templates
      - .:/code
      # - ./config/certbot/conf:/etc/letsencrypt
      # - ./config/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
  
  daphne:
    build: .
    working_dir: /code/
    command: ["./wait-for-it.sh", "db:5432", "--", "daphne", "-u", "/code/daphne.sock", "educa.asgi:application"]
    restart: always
    volumes:
      - .:/code
    environment:
      - DJANGO_SETTINGS_MODULE=educa.settings.prod
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
      - cache

  
  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./config/certbot/conf:/etc/letsencrypt
  #     - ./config/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
