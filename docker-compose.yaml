version: '3.7'


services:
  db:
    image: postgres:16.2-alpine
    restart: always
    volumes:
      - ./data/db/:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  
  cache:
    image: redis:latest
    restart: always
    volumes:
      - ./data/cache:/data

  web:
    build: .
    command: ["./wait-for-it.sh", "db:5432", "--", "uwsgi", "--ini", "/code/config/uwsgi/uwsgi.ini"]
    restart: always
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - NGINX_HOST
      - DJANGO_SETTINGS_MODULE=educa.settings.prod
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    env_file:
      - .env
    depends_on:
      - db
      - cache
  
  nginx:
    image: nginx:1.23-alpine
    ports:
      - 80:80
      - 443:443
    restart: always
    environment:
      - NGINX_HOST
    volumes:
      # - ./nginx/first_start/:/etc/nginx/templates/:ro
      - .:/code
      - ./nginx/templates/:/etc/nginx/templates/
      - ./certbot/www:/var/www/certbot/
      - ./certbot/conf/:/etc/nginx/ssl/
  certbot:
    image: certbot/certbot:v2.5.0
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  daphne:
    build: .
    working_dir: /code/
    command: ["./wait-for-it.sh", "db:5432", "--", "daphne", "-u", "/code/daphne.sock", "educa.asgi:application"]
    restart: always
    volumes:
      - .:/code
    environment:
      - DJANGO_SETTINGS_MODULE=educa.settings.prod
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
      - cache
